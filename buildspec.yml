version: 0.2

env:
  variables:
    ENVIRONMENT: "production"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Aryn123a1! | docker login --username aryanjangde --password-stdin
  build:
    commands:
      - echo Fetching Git commit hash...
      - GIT_COMMIT_HASH=$(git rev-parse HEAD)
      - echo Building Docker images with docker-compose...
      - docker-compose -f docker-compose.yml build

      - echo Tagging Docker images...
      - services=$(docker-compose config --services)
      - IMAGE_URIS=""

      - for service in $services; do
          echo "Tagging service $service with Git commit hash $GIT_COMMIT_HASH...";
          IMAGE_TAG="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$service-$GIT_COMMIT_HASH";
          IMAGE_TAG=$(echo ${IMAGE_TAG} | tr -d '[:space:]');
          docker tag backend-roorkee-$service:latest $IMAGE_TAG;
          IMAGE_URIS="$IMAGE_URIS $IMAGE_TAG";
        done
      - IMAGE_URIS=$(echo ${IMAGE_URIS} | xargs)  # Remove leading/trailing spaces
      - echo Docker images have been tagged:$IMAGE_URIS

  post_build:
    commands:
      - echo Verifying Docker login...
      - docker info  # This will show the Docker daemon info and confirm login status
      - echo Pushing Docker images to ECR...
      - echo $IMAGE_URIS
      - for image_uri in $IMAGE_URIS; do
          echo "Pushing $image_uri";
          docker push $image_uri || { echo "Failed to push $image_uri"; exit 1; }
        done
      - echo Docker images push complete.
